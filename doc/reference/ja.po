# ja.po for Cutter Reference.
# Copyright (C) 2007 Kouhei Sutou
# This file is distributed under the same license as the Cutter package.
# Kouhei Sutou <kou@cozmixng.org>, 2007.
#
msgid ""
msgstr ""
"Project-Id-Version: Cutter 0.3.0\n"
"POT-Creation-Date: 2007-12-17 15:03+0900\n"
"PO-Revision-Date: 2007-12-17 15:03+0900\n"
"Last-Translator: Kouhei Sutou <kou@cozmixng.org>\n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\\n\n"

#: cutter-docs.sgml:7(title)
msgid "Cutter Reference Manual"
msgstr "Cutterリファレンスマニュアル"

#: cutter-docs.sgml:8(releaseinfo)
msgid "for Cutter &version;"
msgstr "Cutter &version;用"

#: cutter-docs.sgml:12(title)
msgid "Introduction"
msgstr "はじめに"

#: cutter-docs.sgml:14(title)
msgid "Getting start"
msgstr "はじめよう"

#: cutter-docs.sgml:22(title)
msgid "Reference"
msgstr "リファレンス"

#: cutter-docs.sgml:24(title)
msgid "Writing tests"
msgstr "テスト作成"

#: cutter-docs.sgml:59(title)
msgid "Index"
msgstr "索引"

#: cutter-docs.sgml:62(title)
msgid "Index of deprecated symbols"
msgstr "非推奨のシンボル一覧"

#: cutter-docs.sgml:65(title)
msgid "Index of new symbols in 0.3"
msgstr "0.3での新しいシンボル一覧"

#: xml/cut-assertions.xml:7(refentrytitle) xml/cut-assertions.xml:13(refname)
#: xml/cutter.xml:171(link)
msgid "Assertions"
msgstr "検証"

#: xml/cut-assertions.xml:8(manvolnum) xml/cut-gassertions.xml:8(manvolnum)
#: xml/cut-main.xml:8(manvolnum) xml/cut-ui-factory.xml:8(manvolnum)
#: xml/cut-ui.xml:8(manvolnum) xml/cut-value-equal.xml:8(manvolnum)
#: xml/cutter.xml:8(manvolnum) xml/gbsearcharray.xml:8(manvolnum)
msgid "3"
msgstr ""

#: xml/cut-assertions.xml:9(refmiscinfo)
#: xml/cut-gassertions.xml:9(refmiscinfo) xml/cut-main.xml:9(refmiscinfo)
#: xml/cut-ui-factory.xml:9(refmiscinfo) xml/cut-ui.xml:9(refmiscinfo)
#: xml/cut-value-equal.xml:9(refmiscinfo) xml/cutter.xml:9(refmiscinfo)
#: xml/gbsearcharray.xml:9(refmiscinfo)
msgid "CUTTER Library"
msgstr "Cutterライブラリ"

#: xml/cut-assertions.xml:14(refpurpose)
msgid "Checks that your program works as you expect."
msgstr "あなたのプログラムが期待通りに動作しているかを検証します。"

#: xml/cut-assertions.xml:19(title) xml/cut-gassertions.xml:20(title)
#: xml/cut-main.xml:19(title) xml/cut-ui-factory.xml:19(title)
#: xml/cut-ui.xml:19(title) xml/cut-value-equal.xml:19(title)
#: xml/cutter.xml:19(title) xml/gbsearcharray.xml:19(title)
msgid "Synopsis"
msgstr "概要"

#: xml/cut-assertions.xml:25(link) xml/cut-assertions.xml:77(primary)
msgid "cut_error"
msgstr ""

#: xml/cut-assertions.xml:26(link) xml/cut-assertions.xml:92(primary)
msgid "cut_fail"
msgstr ""

#: xml/cut-assertions.xml:27(link) xml/cut-assertions.xml:107(primary)
msgid "cut_pending"
msgstr ""

#: xml/cut-assertions.xml:28(link) xml/cut-assertions.xml:123(primary)
msgid "cut_notify"
msgstr ""

#: xml/cut-assertions.xml:29(link) xml/cut-assertions.xml:138(primary)
msgid "cut_assert"
msgstr ""

#: xml/cut-assertions.xml:30(link) xml/cut-assertions.xml:154(primary)
msgid "cut_assert_null"
msgstr ""

#: xml/cut-assertions.xml:31(link) xml/cut-assertions.xml:170(primary)
msgid "cut_assert_null_string"
msgstr ""

#: xml/cut-assertions.xml:32(link) xml/cut-assertions.xml:187(primary)
msgid "cut_assert_not_null"
msgstr ""

#: xml/cut-assertions.xml:33(link) xml/cut-assertions.xml:203(primary)
msgid "cut_assert_equal_int"
msgstr ""

#: xml/cut-assertions.xml:34(link) xml/cut-assertions.xml:222(primary)
msgid "cut_assert_equal_uint"
msgstr ""

#: xml/cut-assertions.xml:35(link) xml/cut-assertions.xml:241(primary)
msgid "cut_assert_equal_double"
msgstr ""

#: xml/cut-assertions.xml:36(link) xml/cut-assertions.xml:263(primary)
msgid "cut_assert_equal_string"
msgstr ""

#: xml/cut-assertions.xml:37(link) xml/cut-assertions.xml:283(primary)
msgid "cut_assert_equal_string_with_free"
msgstr ""

#: xml/cut-assertions.xml:38(link) xml/cut-assertions.xml:304(primary)
msgid "cut_assert_equal_string_or_null"
msgstr ""

#: xml/cut-assertions.xml:39(link) xml/cut-assertions.xml:325(primary)
msgid "cut_assert_equal_memory"
msgstr ""

#: xml/cut-assertions.xml:41(link) xml/cut-assertions.xml:352(primary)
msgid "cut_assert_equal_string_array"
msgstr ""

#: xml/cut-assertions.xml:42(link) xml/cut-assertions.xml:372(primary)
msgid "cut_assert_operator"
msgstr ""

#: xml/cut-assertions.xml:43(link) xml/cut-assertions.xml:400(primary)
msgid "cut_assert_operator_int"
msgstr ""

#: xml/cut-assertions.xml:44(link) xml/cut-assertions.xml:428(primary)
msgid "cut_assert_equal"
msgstr ""

#: xml/cut-assertions.xml:21(synopsis)
#, no-wrap
msgid ""
"\n"
"\n"
"\n"
"\n"
"#define             <placeholder-1/>                           (format, ...)\n"
"#define             <placeholder-2/>                            (format, ...)\n"
"#define             <placeholder-3/>                         (format, ...)\n"
"#define             <placeholder-4/>                          (format, ...)\n"
"#define             <placeholder-5/>                          (expression, ...)\n"
"#define             <placeholder-6/>                     (expression, ...)\n"
"#define             <placeholder-7/>              (expression, ...)\n"
"#define             <placeholder-8/>                 (expression, ...)\n"
"#define             <placeholder-9/>                (expected, actual, ...)\n"
"#define             <placeholder-10/>               (expected, actual, ...)\n"
"#define             <placeholder-11/>             (expected, error, actual, ...)\n"
"#define             <placeholder-12/>             (expected, actual, ...)\n"
"#define             <placeholder-13/>   (expected, actual, ...)\n"
"#define             <placeholder-14/>     (expected, actual, ...)\n"
"#define             <placeholder-15/>             (expected, expected_size,\n"
"                                                         actual, actual_size, ...)\n"
"#define             <placeholder-16/>       (expected, actual, ...)\n"
"#define             <placeholder-17/>                 (lhs, operator, rhs, ...)\n"
"#define             <placeholder-18/>             (lhs, operator, rhs, ...)\n"
"#define             <placeholder-19/>                    (function, expected, actual, ...)\n"
msgstr ""

#: xml/cut-assertions.xml:57(title) xml/cut-gassertions.xml:40(title)
#: xml/cut-main.xml:43(title) xml/cut-ui-factory.xml:57(title)
#: xml/cut-ui.xml:52(title) xml/cut-value-equal.xml:43(title)
#: xml/cutter.xml:39(title) xml/gbsearcharray.xml:48(title)
msgid "Description"
msgstr "説明"

#: xml/cut-assertions.xml:58(para)
msgid ""
"To check that your program works as you expect, you use <link linkend=\"cut-"
"assert-XXX\"><function>cut_assert_XXX()</function></link> where you want to "
"check expected value is got."
msgstr ""
"あなたのプログラムが期待通りに動作しているかを検証するために、期待した値が得"
"られていることを検証したい箇所で<link linkend=\"cut-assert-XXX"
"\"><function>cut_assert_XXX()</function></link>を使います。"

#: xml/cut-assertions.xml:65(programlisting)
#, no-wrap
msgid ""
"\n"
"cut_assert_equal_int(3, 1 + 2);\n"
msgstr ""

#: xml/cut-assertions.xml:63(para) xml/cut-assertions.xml:376(para)
#: xml/cut-assertions.xml:404(para) xml/cut-assertions.xml:432(para)
msgid "e.g.: <placeholder-1/>"
msgstr "例: <placeholder-1/>"

#: xml/cut-assertions.xml:74(title) xml/cut-gassertions.xml:49(title)
#: xml/cut-main.xml:50(title) xml/cut-ui-factory.xml:64(title)
#: xml/cut-ui.xml:59(title) xml/cut-value-equal.xml:50(title)
#: xml/cutter.xml:144(title) xml/gbsearcharray.xml:55(title)
msgid "Details"
msgstr "詳細"

#: xml/cut-assertions.xml:76(title)
msgid "<anchor id=\"cut-error\" role=\"macro\"/>cut_error()"
msgstr ""

#: xml/cut-assertions.xml:77(programlisting)
#, no-wrap
msgid "#define             cut_error(format, ...)"
msgstr ""

#: xml/cut-assertions.xml:78(para)
msgid "Raises an error with message."
msgstr "メッセージ付きでエラーを発生させます。"

#: xml/cut-assertions.xml:83(term) xml/cut-assertions.xml:98(term)
#: xml/cut-assertions.xml:114(term) xml/cut-assertions.xml:129(term)
msgid "<parameter>format</parameter>&nbsp;:"
msgstr ""

#: xml/cut-assertions.xml:84(simpara) xml/cut-assertions.xml:99(simpara)
#: xml/cut-assertions.xml:115(simpara) xml/cut-assertions.xml:130(simpara)
msgid ""
"the message format. See the <link linkend=\"printf\"><function>printf()</"
"function></link> documentation."
msgstr ""
"整形文字列。<link linkend=\"printf\"><function>printf()</function></link>のド"
"キュメントを見てください。"

#: xml/cut-assertions.xml:86(term) xml/cut-assertions.xml:101(term)
#: xml/cut-assertions.xml:117(term) xml/cut-assertions.xml:132(term)
#: xml/cut-assertions.xml:147(term) xml/cut-assertions.xml:163(term)
#: xml/cut-assertions.xml:179(term) xml/cut-assertions.xml:196(term)
#: xml/cut-assertions.xml:215(term) xml/cut-assertions.xml:234(term)
#: xml/cut-assertions.xml:256(term) xml/cut-assertions.xml:276(term)
#: xml/cut-assertions.xml:296(term) xml/cut-assertions.xml:318(term)
#: xml/cut-assertions.xml:345(term) xml/cut-assertions.xml:365(term)
#: xml/cut-assertions.xml:393(term) xml/cut-assertions.xml:421(term)
#: xml/cut-assertions.xml:449(term) xml/cut-gassertions.xml:64(term)
#: xml/cut-gassertions.xml:83(term) xml/cut-ui-factory.xml:176(term)
#: xml/cut-ui.xml:158(term)
msgid "<parameter>...</parameter>&nbsp;:"
msgstr ""

#: xml/cut-assertions.xml:87(simpara) xml/cut-assertions.xml:102(simpara)
#: xml/cut-assertions.xml:118(simpara) xml/cut-assertions.xml:133(simpara)
msgid "the parameters to insert into the format string."
msgstr "整形文字列に挿入されるパラメータ。"

#: xml/cut-assertions.xml:91(title)
msgid "<anchor id=\"cut-fail\" role=\"macro\"/>cut_fail()"
msgstr ""

#: xml/cut-assertions.xml:92(programlisting)
#, no-wrap
msgid "#define             cut_fail(format, ...)"
msgstr ""

#: xml/cut-assertions.xml:93(para)
msgid "Raises a failure with message."
msgstr "メッセージ付きでテストを失敗させます。"

#: xml/cut-assertions.xml:106(title)
msgid "<anchor id=\"cut-pending\" role=\"macro\"/>cut_pending()"
msgstr ""

#: xml/cut-assertions.xml:107(programlisting)
#, no-wrap
msgid "#define             cut_pending(format, ...)"
msgstr ""

#: xml/cut-assertions.xml:108(para)
msgid "Marks the test is pending with message. The test is stopped."
msgstr ""
"メッセージ付きでこのテストが未解決であると印を付けます。テストはここで中断し"
"ます。"

#: xml/cut-assertions.xml:122(title)
msgid "<anchor id=\"cut-notify\" role=\"macro\"/>cut_notify()"
msgstr ""

#: xml/cut-assertions.xml:123(programlisting)
#, no-wrap
msgid "#define             cut_notify(format, ...)"
msgstr ""

#: xml/cut-assertions.xml:124(para)
msgid "Leaves a notification message. The test is continued."
msgstr "通知用のメッセージを残します。テストは続行します。"

#: xml/cut-assertions.xml:137(title)
msgid "<anchor id=\"cut-assert\" role=\"macro\"/>cut_assert()"
msgstr ""

#: xml/cut-assertions.xml:138(programlisting)
#, no-wrap
msgid "#define             cut_assert(expression, ...)"
msgstr ""

#: xml/cut-assertions.xml:139(para)
msgid "Passes if <parameter>expression</parameter> is not 0 or NULL."
msgstr "<parameter>expression</parameter>が0でもNULLでもないときにパスします。"

#: xml/cut-assertions.xml:144(term) xml/cut-assertions.xml:160(term)
#: xml/cut-assertions.xml:176(term) xml/cut-assertions.xml:193(term)
msgid "<parameter>expression</parameter>&nbsp;:"
msgstr ""

#: xml/cut-assertions.xml:145(simpara) xml/cut-assertions.xml:161(simpara)
#: xml/cut-assertions.xml:194(simpara)
msgid "the expression to check."
msgstr "チェックする式。"

#: xml/cut-assertions.xml:148(simpara) xml/cut-assertions.xml:164(simpara)
#: xml/cut-assertions.xml:180(simpara) xml/cut-assertions.xml:197(simpara)
#: xml/cut-assertions.xml:216(simpara) xml/cut-assertions.xml:235(simpara)
#: xml/cut-assertions.xml:257(simpara) xml/cut-assertions.xml:277(simpara)
#: xml/cut-assertions.xml:297(simpara) xml/cut-assertions.xml:319(simpara)
#: xml/cut-assertions.xml:346(simpara) xml/cut-assertions.xml:366(simpara)
#: xml/cut-assertions.xml:394(simpara) xml/cut-assertions.xml:422(simpara)
#: xml/cut-assertions.xml:450(simpara) xml/cut-gassertions.xml:65(simpara)
#: xml/cut-gassertions.xml:84(simpara)
msgid ""
"optional format string, followed by parameters to insert into the format "
"string (as with <link linkend=\"printf\"><function>printf()</function></"
"link>)"
msgstr ""
"省略可能な整形文字列。以降のパラメータが整形文字列に挿入されます。（<link "
"linkend=\"printf\"><function>printf()</function></link>と同じ）"

#: xml/cut-assertions.xml:153(title)
msgid "<anchor id=\"cut-assert-null\" role=\"macro\"/>cut_assert_null()"
msgstr ""

#: xml/cut-assertions.xml:154(programlisting)
#, no-wrap
msgid "#define             cut_assert_null(expression, ...)"
msgstr ""

#: xml/cut-assertions.xml:155(para) xml/cut-assertions.xml:171(para)
msgid "Passes if <parameter>expression</parameter> is NULL."
msgstr "<parameter>expression</parameter>がNULLのときにパスします。"

#: xml/cut-assertions.xml:169(title)
msgid ""
"<anchor id=\"cut-assert-null-string\" role=\"macro\" condition=\"since:0.3\"/"
">cut_assert_null_string()"
msgstr ""

#: xml/cut-assertions.xml:170(programlisting)
#, no-wrap
msgid "#define             cut_assert_null_string(expression, ...)"
msgstr ""

#: xml/cut-assertions.xml:177(simpara)
msgid "the expression that returns string."
msgstr "文字列を返す式。"

#: xml/cut-assertions.xml:183(para) xml/cut-assertions.xml:300(para)
msgid "Since 0.3"
msgstr "0.3から"

#: xml/cut-assertions.xml:186(title)
msgid ""
"<anchor id=\"cut-assert-not-null\" role=\"macro\"/>cut_assert_not_null()"
msgstr ""

#: xml/cut-assertions.xml:187(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_null(expression, ...)"
msgstr ""

#: xml/cut-assertions.xml:188(para)
msgid "Passes if <parameter>expression</parameter> is not NULL."
msgstr "<parameter>expression</parameter>がNULLではないときにパスします。"

#: xml/cut-assertions.xml:202(title)
msgid ""
"<anchor id=\"cut-assert-equal-int\" role=\"macro\"/>cut_assert_equal_int()"
msgstr ""

#: xml/cut-assertions.xml:203(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_int(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:204(para) xml/cut-assertions.xml:223(para)
#: xml/cut-gassertions.xml:53(para) xml/cut-gassertions.xml:72(para)
msgid ""
"Passes if <parameter>expected</parameter> == <parameter>actual</parameter>."
msgstr ""
"<parameter>expected</parameter> == <parameter>actual</parameter>が成り立つと"
"きパスします。"

#: xml/cut-assertions.xml:209(term) xml/cut-assertions.xml:228(term)
#: xml/cut-assertions.xml:247(term) xml/cut-assertions.xml:270(term)
#: xml/cut-assertions.xml:290(term) xml/cut-assertions.xml:312(term)
#: xml/cut-assertions.xml:333(term) xml/cut-assertions.xml:359(term)
#: xml/cut-assertions.xml:443(term) xml/cut-gassertions.xml:58(term)
#: xml/cut-gassertions.xml:77(term)
msgid "<parameter>expected</parameter>&nbsp;:"
msgstr ""

#: xml/cut-assertions.xml:210(simpara)
msgid "an expected integer value."
msgstr "期待する整数の値。"

#: xml/cut-assertions.xml:212(term) xml/cut-assertions.xml:231(term)
#: xml/cut-assertions.xml:253(term) xml/cut-assertions.xml:273(term)
#: xml/cut-assertions.xml:293(term) xml/cut-assertions.xml:315(term)
#: xml/cut-assertions.xml:339(term) xml/cut-assertions.xml:362(term)
#: xml/cut-assertions.xml:446(term) xml/cut-gassertions.xml:61(term)
#: xml/cut-gassertions.xml:80(term)
msgid "<parameter>actual</parameter>&nbsp;:"
msgstr ""

#: xml/cut-assertions.xml:213(simpara)
msgid "an actual integer value."
msgstr "実際の整数の値。"

#: xml/cut-assertions.xml:221(title)
msgid ""
"<anchor id=\"cut-assert-equal-uint\" role=\"macro\"/>cut_assert_equal_uint()"
msgstr ""

#: xml/cut-assertions.xml:222(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_uint(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:229(simpara)
msgid "an expected unsigned integer value."
msgstr "期待する符号無し整数の値。"

#: xml/cut-assertions.xml:232(simpara)
msgid "an actual unsigned integer value."
msgstr "実際の符号無し符号整数の値。"

#: xml/cut-assertions.xml:240(title)
msgid ""
"<anchor id=\"cut-assert-equal-double\" role=\"macro\"/"
">cut_assert_equal_double()"
msgstr ""

#: xml/cut-assertions.xml:241(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_double(expected, error, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:242(para)
msgid ""
"Passes if (<parameter>expected</parameter> - <parameter>error</parameter>) "
"&lt;= <parameter>actual</parameter> &lt;= (<parameter>expected</parameter> + "
"<parameter>error</parameter>)."
msgstr ""
"(<parameter>expected</parameter> - <parameter>error</parameter>) &lt;= "
"<parameter>actual</parameter> &lt;= (<parameter>expected</parameter> + "
"<parameter>error</parameter>)が成り立つときパスします。"

#: xml/cut-assertions.xml:248(simpara)
msgid "an expected float value."
msgstr "期待される浮動小数点数。"

#: xml/cut-assertions.xml:250(term)
msgid "<parameter>error</parameter>&nbsp;:"
msgstr ""

#: xml/cut-assertions.xml:251(simpara)
msgid "an float value that specifies error range."
msgstr "誤差範囲を示す浮動小数点数。"

#: xml/cut-assertions.xml:254(simpara)
msgid "an actual float value."
msgstr "実際の浮動小数点数。"

#: xml/cut-assertions.xml:262(title)
msgid ""
"<anchor id=\"cut-assert-equal-string\" role=\"macro\"/"
">cut_assert_equal_string()"
msgstr ""

#: xml/cut-assertions.xml:263(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_string(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:264(para) xml/cut-assertions.xml:284(para)
#: xml/cut-assertions.xml:306(para)
msgid ""
"Passes if both <parameter>expected</parameter> and <parameter>actual</"
"parameter> are NULL or strcmp(<parameter>expected</parameter>, "
"<parameter>actual</parameter>) == 0."
msgstr ""
"<parameter>expected</parameter>と<parameter>actual</parameter>がどちらとも"
"NULL、あるいはstrcmp(<parameter>expected</parameter>, <parameter>actual</"
"parameter>) == 0が成り立つときにパスします。"

#: xml/cut-assertions.xml:271(simpara) xml/cut-assertions.xml:291(simpara)
#: xml/cut-assertions.xml:313(simpara)
msgid "an expected string value."
msgstr "期待される文字列。"

#: xml/cut-assertions.xml:274(simpara) xml/cut-assertions.xml:316(simpara)
msgid "an actual string value."
msgstr "実際の文字列の値。"

#: xml/cut-assertions.xml:282(title)
msgid ""
"<anchor id=\"cut-assert-equal-string-with-free\" role=\"macro\" condition="
"\"since:0.3\"/>cut_assert_equal_string_with_free()"
msgstr ""

#: xml/cut-assertions.xml:283(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_string_with_free(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:294(simpara)
msgid "an actual string value that is freed."
msgstr "実際の文字列の値（メモリは開放される）。"

#: xml/cut-assertions.xml:303(title)
msgid ""
"<anchor id=\"cut-assert-equal-string-or-null\" role=\"macro\" condition="
"\"deprecated:0.3: Use cut_assert_equal_string() instead.\"/"
">cut_assert_equal_string_or_null()"
msgstr ""

#: xml/cut-assertions.xml:304(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_string_or_null(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:305(para)
msgid ""
"<literal>cut_assert_equal_string_or_null</literal> has been deprecated since "
"version 0.3 and should not be used in newly-written code. Use <link linkend="
"\"cut-assert-equal-string\"><function>cut_assert_equal_string()</function></"
"link> instead."
msgstr ""
"<literal>cut_assert_equal_string_or_null</literal>はバージョン0.3から非推奨に"
"なりました。新しく書くコードでは使わないでください。代わりに<link linkend="
"\"cut-assert-equal-string\"><function>cut_assert_equal_string()</function></"
"link>を使ってください。"

#: xml/cut-assertions.xml:324(title)
msgid ""
"<anchor id=\"cut-assert-equal-memory\" role=\"macro\"/"
">cut_assert_equal_memory()"
msgstr ""

#: xml/cut-assertions.xml:325(programlisting)
#, no-wrap
msgid ""
"#define             cut_assert_equal_memory(expected, expected_size,                \\\n"
"                                            actual, actual_size, ...)"
msgstr ""

#: xml/cut-assertions.xml:327(para)
msgid ""
"Passes if <parameter>expected_size</parameter> == <parameter>actual_size</"
"parameter> and memcmp(<parameter>expected</parameter>, <parameter>actual</"
"parameter>, <parameter>expected_size</parameter>) == 0."
msgstr ""
"<parameter>expected_size</parameter> == <parameter>actual_size</parameter>が"
"成り立ち、かつ、memcmp(<parameter>expected</parameter>, <parameter>actual</"
"parameter>, <parameter>expected_size</parameter>) == 0が成り立つときにパスし"
"ます。"

#: xml/cut-assertions.xml:334(simpara)
msgid "an expected data."
msgstr "期待するデータ。"

#: xml/cut-assertions.xml:336(term)
msgid "<parameter>expected_size</parameter>&nbsp;:"
msgstr ""

#: xml/cut-assertions.xml:337(simpara)
msgid "a size of <parameter>expected</parameter>."
msgstr "<parameter>expected</parameter>のサイズ。"

#: xml/cut-assertions.xml:340(simpara)
msgid "an actual data."
msgstr "実際のデータ。"

#: xml/cut-assertions.xml:342(term)
msgid "<parameter>actual_size</parameter>&nbsp;:"
msgstr ""

#: xml/cut-assertions.xml:343(simpara)
msgid "a size of <parameter>actual</parameter>."
msgstr "<parameter>actual</parameter>のサイズ。"

#: xml/cut-assertions.xml:351(title)
msgid ""
"<anchor id=\"cut-assert-equal-string-array\" role=\"macro\"/"
">cut_assert_equal_string_array()"
msgstr ""

#: xml/cut-assertions.xml:352(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_string_array(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:353(para)
msgid ""
"Passes if both <parameter>expected</parameter> and <parameter>actual</"
"parameter> are not NULL and have same content (<link linkend=\"strcmp"
"\"><function>strcmp()</function></link> == 0) strings."
msgstr ""
"<parameter>expected</parameter>と<parameter>actual</parameter>がどちらとも"
"NULLではなく、どちらも同じ内容の文字列(<link linkend=\"strcmp"
"\"><function>strcmp()</function></link> == 0)を持つときにパスします。"

#: xml/cut-assertions.xml:360(simpara)
msgid "an expected NULL-terminated array of strings."
msgstr "期待する文字列の配列。配列はNULL終端。"

#: xml/cut-assertions.xml:363(simpara)
msgid "an actual NULL-terminated array of strings."
msgstr "実際の文字列の配列。配列はNULL終端。"

#: xml/cut-assertions.xml:371(title)
msgid ""
"<anchor id=\"cut-assert-operator\" role=\"macro\"/>cut_assert_operator()"
msgstr ""

#: xml/cut-assertions.xml:372(programlisting)
#, no-wrap
msgid "#define             cut_assert_operator(lhs, operator, rhs, ...)"
msgstr ""

#: xml/cut-assertions.xml:373(para) xml/cut-assertions.xml:401(para)
msgid ""
"Passes if (<parameter>lhs</parameter> <parameter>operator</parameter> "
"<parameter>rhs</parameter>) is TRUE."
msgstr ""
"(<parameter>lhs</parameter> <parameter>operator</parameter> <parameter>rhs</"
"parameter>)が真のときにパスします。"

#: xml/cut-assertions.xml:378(programlisting)
#, no-wrap
msgid ""
"\n"
"cut_assert_operator(1, &lt;, 2) -&gt; (1 &lt; 2)\n"
msgstr ""

#: xml/cut-assertions.xml:384(term) xml/cut-assertions.xml:412(term)
msgid "<parameter>lhs</parameter>&nbsp;:"
msgstr ""

#: xml/cut-assertions.xml:385(simpara)
msgid "a left hand side value."
msgstr "左辺値。"

#: xml/cut-assertions.xml:387(term) xml/cut-assertions.xml:415(term)
msgid "<parameter>operator</parameter>&nbsp;:"
msgstr ""

#: xml/cut-assertions.xml:388(simpara) xml/cut-assertions.xml:416(simpara)
msgid "a binary operator."
msgstr "二項演算子。"

#: xml/cut-assertions.xml:390(term) xml/cut-assertions.xml:418(term)
msgid "<parameter>rhs</parameter>&nbsp;:"
msgstr ""

#: xml/cut-assertions.xml:391(simpara)
msgid "a right hand side value."
msgstr "右辺値。"

#: xml/cut-assertions.xml:399(title)
msgid ""
"<anchor id=\"cut-assert-operator-int\" role=\"macro\"/"
">cut_assert_operator_int()"
msgstr ""

#: xml/cut-assertions.xml:400(programlisting)
#, no-wrap
msgid "#define             cut_assert_operator_int(lhs, operator, rhs, ...)"
msgstr ""

#: xml/cut-assertions.xml:406(programlisting)
#, no-wrap
msgid ""
"\n"
"cut_assert_operator_int(1, &lt;, 2) -&gt; (1 &lt; 2)\n"
msgstr ""

#: xml/cut-assertions.xml:413(simpara)
msgid "a left hand side integer value."
msgstr "左辺の整数の値。"

#: xml/cut-assertions.xml:419(simpara)
msgid "a right hand side integer value."
msgstr "右辺の整数の値。"

#: xml/cut-assertions.xml:427(title)
msgid "<anchor id=\"cut-assert-equal\" role=\"macro\"/>cut_assert_equal()"
msgstr ""

#: xml/cut-assertions.xml:428(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal(function, expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:429(para)
msgid ""
"Passes if <parameter>function</parameter>(<parameter>expected</parameter>, "
"<parameter>actual</parameter>) returns TRUE."
msgstr ""
"<parameter>function</parameter>(<parameter>expected</parameter>, "
"<parameter>actual</parameter>)が真を返すときパスします。"

#: xml/cut-assertions.xml:434(programlisting)
#, no-wrap
msgid ""
"\n"
"cut_assert_equal(!strcmp, \"abc\", \"abc\") -&gt; Pass\n"
msgstr ""

#: xml/cut-assertions.xml:440(term)
msgid "<parameter>function</parameter>&nbsp;:"
msgstr ""

#: xml/cut-assertions.xml:441(simpara)
msgid ""
"a function that compares <parameter>actual</parameter> with "
"<parameter>expected</parameter>."
msgstr ""
"<parameter>actual</parameter>と<parameter>expected</parameter>を比較する関"
"数。"

#: xml/cut-assertions.xml:444(simpara)
msgid "an expected value."
msgstr "期待値。"

#: xml/cut-assertions.xml:447(simpara)
msgid "an actual value."
msgstr "実測値。"

#: xml/cut-gassertions.xml:7(refentrytitle)
#: xml/cut-gassertions.xml:13(refname)
msgid "Assertions with GLib support"
msgstr "GLibサポート付きの検証"

#: xml/cut-gassertions.xml:14(refpurpose)
msgid "Checks that your program works as you expect with GLib support."
msgstr ""
"GLibサポート付きであなたのプログラムが期待通りに動作しているかを検証します。"

#: xml/cut-gassertions.xml:26(link) xml/cut-gassertions.xml:52(primary)
msgid "cut_assert_equal_g_type"
msgstr ""

#: xml/cut-gassertions.xml:27(link) xml/cut-gassertions.xml:71(primary)
msgid "cut_assert_equal_g_value"
msgstr ""

#: xml/cut-gassertions.xml:22(synopsis)
#, no-wrap
msgid ""
"\n"
"\n"
"\n"
"\n"
"#define             <placeholder-1/>             (expected, actual, ...)\n"
"#define             <placeholder-2/>            (expected, actual, ...)\n"
msgstr ""

#: xml/cut-gassertions.xml:51(title)
msgid ""
"<anchor id=\"cut-assert-equal-g-type\" role=\"macro\"/"
">cut_assert_equal_g_type()"
msgstr ""

#: xml/cut-gassertions.xml:52(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_g_type(expected, actual, ...)"
msgstr ""

#: xml/cut-gassertions.xml:59(simpara)
msgid "an expected GType."
msgstr "期待するGType。"

#: xml/cut-gassertions.xml:62(simpara)
msgid "an actual GType."
msgstr "実際のGType。"

#: xml/cut-gassertions.xml:70(title)
msgid ""
"<anchor id=\"cut-assert-equal-g-value\" role=\"macro\"/"
">cut_assert_equal_g_value()"
msgstr ""

#: xml/cut-gassertions.xml:71(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_g_value(expected, actual, ...)"
msgstr ""

#: xml/cut-gassertions.xml:78(simpara)
msgid "an expected GValue *."
msgstr "期待するGValue *。"

#: xml/cut-gassertions.xml:81(simpara)
msgid "an actual GValue *."
msgstr "実際のGValue *。"

#: xml/cut-main.xml:7(refentrytitle) xml/cut-main.xml:13(refname)
msgid "cut-main"
msgstr ""

#: xml/cut-main.xml:25(link) xml/cut-main.xml:27(link)
#: xml/cut-ui-factory.xml:26(link) xml/cut-ui-factory.xml:27(link)
#: xml/cut-ui-factory.xml:30(link) xml/cut-ui-factory.xml:32(link)
#: xml/cut-ui-factory.xml:33(link) xml/cut-ui-factory.xml:40(link)
#: xml/cut-ui.xml:26(link) xml/cut-ui.xml:27(link) xml/cut-ui.xml:29(link)
#: xml/cut-ui.xml:30(link) xml/cut-ui.xml:31(link)
#: xml/cut-value-equal.xml:25(link) xml/cut-value-equal.xml:28(link)
#: xml/cutter.xml:25(link) xml/cutter.xml:26(link)
msgid "void"
msgstr ""

#: xml/cut-main.xml:25(link) xml/cut-main.xml:53(primary)
msgid "cut_init"
msgstr ""

#: xml/cut-main.xml:25(link)
msgid "int"
msgstr ""

#: xml/cut-main.xml:26(link)
msgid "char"
msgstr ""

#: xml/cut-main.xml:27(link) xml/cut-main.xml:69(primary)
msgid "cut_quit"
msgstr ""

#: xml/cut-main.xml:28(link) xml/cut-main.xml:30(link) xml/cut-ui.xml:37(link)
#: xml/cut-value-equal.xml:26(link)
msgid "gboolean"
msgstr ""

#: xml/cut-main.xml:28(link) xml/cut-main.xml:75(primary)
msgid "cut_run"
msgstr ""

#: xml/cut-main.xml:29(link) xml/cut-main.xml:30(link) xml/cut-ui.xml:38(link)
msgid "CutRunner"
msgstr ""

#: xml/cut-main.xml:29(link) xml/cut-main.xml:86(primary)
msgid "cut_create_runner"
msgstr ""

#: xml/cut-main.xml:30(link) xml/cut-main.xml:97(primary)
msgid "cut_run_runner"
msgstr ""

#: xml/cut-main.xml:21(synopsis)
#, no-wrap
msgid ""
"\n"
"\n"
"\n"
"\n"
"<placeholder-1/>                <placeholder-2/>                            (<placeholder-3/> *argc,\n"
"                                                         <placeholder-4/> ***argv);\n"
"<placeholder-5/>                <placeholder-6/>                            (void);\n"
"<placeholder-7/>            <placeholder-8/>                             (void);\n"
"<placeholder-9/>*          <placeholder-10/>                   (void);\n"
"<placeholder-11/>            <placeholder-12/>                      (<placeholder-13/> *runner);\n"
msgstr ""

#: xml/cut-main.xml:52(title)
msgid "<anchor id=\"cut-init\" role=\"function\"/>cut_init ()"
msgstr ""

#: xml/cut-main.xml:53(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\">void</link>                cut_init                            (<link linkend=\"int\">int</link> *argc,\n"
"                                                         <link linkend=\"char\">char</link> ***argv);"
msgstr ""

#: xml/cut-main.xml:58(term)
msgid "<parameter>argc</parameter>&nbsp;:"
msgstr ""

#: xml/cut-main.xml:61(term)
msgid "<parameter>argv</parameter>&nbsp;:"
msgstr ""

#: xml/cut-main.xml:68(title)
msgid "<anchor id=\"cut-quit\" role=\"function\"/>cut_quit ()"
msgstr ""

#: xml/cut-main.xml:69(programlisting)
#, no-wrap
msgid "<link linkend=\"void\">void</link>                cut_quit                            (void);"
msgstr ""

#: xml/cut-main.xml:74(title)
msgid "<anchor id=\"cut-run\" role=\"function\"/>cut_run ()"
msgstr ""

#: xml/cut-main.xml:75(programlisting)
#, no-wrap
msgid "<link linkend=\"gboolean\">gboolean</link>            cut_run                             (void);"
msgstr ""

#: xml/cut-main.xml:79(term) xml/cut-main.xml:90(term)
#: xml/cut-main.xml:104(term) xml/cut-ui-factory.xml:93(term)
#: xml/cut-ui-factory.xml:135(term) xml/cut-ui-factory.xml:146(term)
#: xml/cut-ui-factory.xml:157(term) xml/cut-ui-factory.xml:179(term)
#: xml/cut-ui-factory.xml:209(term) xml/cut-ui-factory.xml:223(term)
#: xml/cut-ui.xml:87(term) xml/cut-ui.xml:128(term) xml/cut-ui.xml:139(term)
#: xml/cut-ui.xml:161(term) xml/cut-ui.xml:179(term)
#: xml/cut-value-equal.xml:70(term) xml/gbsearcharray.xml:81(term)
#: xml/gbsearcharray.xml:194(term) xml/gbsearcharray.xml:208(term)
msgid "<emphasis>Returns</emphasis>&nbsp;:"
msgstr "<emphasis>戻り値</emphasis>&nbsp;:"

#: xml/cut-main.xml:85(title)
msgid ""
"<anchor id=\"cut-create-runner\" role=\"function\"/>cut_create_runner ()"
msgstr ""

#: xml/cut-main.xml:86(programlisting)
#, no-wrap
msgid "<link linkend=\"CutRunner\">CutRunner</link>*          cut_create_runner                   (void);"
msgstr ""

#: xml/cut-main.xml:96(title)
msgid "<anchor id=\"cut-run-runner\" role=\"function\"/>cut_run_runner ()"
msgstr ""

#: xml/cut-main.xml:97(programlisting)
#, no-wrap
msgid "<link linkend=\"gboolean\">gboolean</link>            cut_run_runner                      (<link linkend=\"CutRunner\">CutRunner</link> *runner);"
msgstr ""

#: xml/cut-main.xml:101(term) xml/cut-ui.xml:176(term)
msgid "<parameter>runner</parameter>&nbsp;:"
msgstr ""

#: xml/cut-ui-factory.xml:7(refentrytitle) xml/cut-ui-factory.xml:13(refname)
#: xml/cut-ui-factory.xml:25(link) xml/cut-ui-factory.xml:37(link)
#: xml/cut-ui-factory.xml:40(link) xml/cut-ui-factory.xml:42(link)
#: xml/cut-ui-factory.xml:43(link) xml/cut-ui-factory.xml:67(primary)
msgid "CutUIFactory"
msgstr ""

#: xml/cut-ui-factory.xml:26(link) xml/cut-ui-factory.xml:76(primary)
msgid "cut_ui_factory_init"
msgstr ""

#: xml/cut-ui-factory.xml:27(link) xml/cut-ui-factory.xml:82(primary)
msgid "cut_ui_factory_quit"
msgstr ""

#: xml/cut-ui-factory.xml:28(link) xml/cut-ui-factory.xml:31(link)
#: xml/cut-ui-factory.xml:32(link) xml/cut-ui-factory.xml:37(link)
#: xml/cut-ui-factory.xml:38(link) xml/cut-ui-factory.xml:43(link)
#: xml/cut-ui.xml:28(link) xml/cut-ui.xml:29(link) xml/cut-ui.xml:30(link)
#: xml/cut-ui.xml:34(link) xml/cut-ui.xml:35(link)
msgid "gchar"
msgstr ""

#: xml/cut-ui-factory.xml:28(link) xml/cut-ui-factory.xml:88(primary)
msgid "cut_ui_factory_get_default_module_dir"
msgstr ""

#: xml/cut-ui-factory.xml:30(link) xml/cut-ui-factory.xml:100(primary)
msgid "cut_ui_factory_set_default_module_dir"
msgstr ""

#: xml/cut-ui-factory.xml:32(link) xml/cut-ui-factory.xml:113(primary)
msgid "cut_ui_factory_load"
msgstr ""

#: xml/cut-ui-factory.xml:33(link) xml/cut-ui-factory.xml:125(primary)
msgid "cut_ui_factory_unload"
msgstr ""

#: xml/cut-ui-factory.xml:34(link) xml/cut-ui-factory.xml:35(link)
#: xml/cut-ui-factory.xml:36(link) xml/cut-ui.xml:32(link)
#: xml/cut-ui.xml:33(link)
msgid "GList"
msgstr ""

#: xml/cut-ui-factory.xml:34(link) xml/cut-ui-factory.xml:131(primary)
msgid "cut_ui_factory_get_registered_types"
msgstr ""

#: xml/cut-ui-factory.xml:35(link) xml/cut-ui-factory.xml:142(primary)
msgid "cut_ui_factory_get_log_domains"
msgstr ""

#: xml/cut-ui-factory.xml:36(link) xml/cut-ui-factory.xml:153(primary)
msgid "cut_ui_factory_get_names"
msgstr ""

#: xml/cut-ui-factory.xml:37(link) xml/cut-ui-factory.xml:164(primary)
msgid "cut_ui_factory_new"
msgstr ""

#: xml/cut-ui-factory.xml:40(link) xml/cut-ui-factory.xml:186(primary)
msgid "cut_ui_factory_set_option_group"
msgstr ""

#: xml/cut-ui-factory.xml:41(link)
msgid "GOptionContext"
msgstr ""

#: xml/cut-ui-factory.xml:42(link) xml/cut-ui.xml:7(refentrytitle)
#: xml/cut-ui.xml:13(refname) xml/cut-ui.xml:25(link) xml/cut-ui.xml:34(link)
#: xml/cut-ui.xml:37(link) xml/cut-ui.xml:62(primary)
msgid "CutUI"
msgstr ""

#: xml/cut-ui-factory.xml:42(link) xml/cut-ui-factory.xml:202(primary)
msgid "cut_ui_factory_create"
msgstr ""

#: xml/cut-ui-factory.xml:43(link) xml/cut-ui-factory.xml:216(primary)
msgid "cut_ui_factory_get_name"
msgstr ""

#: xml/cut-ui-factory.xml:21(synopsis)
#, no-wrap
msgid ""
"\n"
"\n"
"\n"
"\n"
"                    <placeholder-1/>;\n"
"<placeholder-2/>                <placeholder-3/>                 (void);\n"
"<placeholder-4/>                <placeholder-5/>                 (void);\n"
"const <placeholder-6/>*        <placeholder-7/>\n"
"                                                        (void);\n"
"<placeholder-8/>                <placeholder-9/>\n"
"                                                        (const <placeholder-10/> *dir);\n"
"<placeholder-11/>                <placeholder-12/>                 (const <placeholder-13/> *base_dir);\n"
"<placeholder-14/>                <placeholder-15/>               (void);\n"
"<placeholder-16/>*              <placeholder-17/> (void);\n"
"<placeholder-18/>*              <placeholder-19/>      (void);\n"
"<placeholder-20/>*              <placeholder-21/>            (void);\n"
"<placeholder-22/>*       <placeholder-23/>                  (const <placeholder-24/> *name,\n"
"                                                         const <placeholder-25/> *first_property,\n"
"                                                         ...);\n"
"<placeholder-26/>                <placeholder-27/>     (<placeholder-28/> *factory,\n"
"                                                         <placeholder-29/> *context);\n"
"<placeholder-30/>*              <placeholder-31/>               (<placeholder-32/> *factory);\n"
"const <placeholder-33/>*        <placeholder-34/>             (<placeholder-35/> *factory);\n"
"\n"
msgstr ""

#: xml/cut-ui-factory.xml:66(title)
msgid "<anchor id=\"CutUIFactory\" role=\"struct\"/>CutUIFactory"
msgstr ""

#: xml/cut-ui-factory.xml:67(programlisting)
#, no-wrap
msgid ""
"typedef struct {\n"
"    GObject object;\n"
"} CutUIFactory;\n"
msgstr ""

#: xml/cut-ui-factory.xml:75(title)
msgid ""
"<anchor id=\"cut-ui-factory-init\" role=\"function\"/>cut_ui_factory_init ()"
msgstr ""

#: xml/cut-ui-factory.xml:76(programlisting)
#, no-wrap
msgid "<link linkend=\"void\">void</link>                cut_ui_factory_init                 (void);"
msgstr ""

#: xml/cut-ui-factory.xml:81(title)
msgid ""
"<anchor id=\"cut-ui-factory-quit\" role=\"function\"/>cut_ui_factory_quit ()"
msgstr ""

#: xml/cut-ui-factory.xml:82(programlisting)
#, no-wrap
msgid "<link linkend=\"void\">void</link>                cut_ui_factory_quit                 (void);"
msgstr ""

#: xml/cut-ui-factory.xml:87(title)
msgid ""
"<anchor id=\"cut-ui-factory-get-default-module-dir\" role=\"function\"/"
">cut_ui_factory_get_default_module_dir ()"
msgstr ""

#: xml/cut-ui-factory.xml:88(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"gchar\">gchar</link>*        cut_ui_factory_get_default_module_dir\n"
"                                                        (void);"
msgstr ""

#: xml/cut-ui-factory.xml:99(title)
msgid ""
"<anchor id=\"cut-ui-factory-set-default-module-dir\" role=\"function\"/"
">cut_ui_factory_set_default_module_dir ()"
msgstr ""

#: xml/cut-ui-factory.xml:100(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\">void</link>                cut_ui_factory_set_default_module_dir\n"
"                                                        (const <link linkend=\"gchar\">gchar</link> *dir);"
msgstr ""

#: xml/cut-ui-factory.xml:105(term) xml/cut-ui.xml:98(term)
msgid "<parameter>dir</parameter>&nbsp;:"
msgstr ""

#: xml/cut-ui-factory.xml:112(title)
msgid ""
"<anchor id=\"cut-ui-factory-load\" role=\"function\"/>cut_ui_factory_load ()"
msgstr ""

#: xml/cut-ui-factory.xml:113(programlisting)
#, no-wrap
msgid "<link linkend=\"void\">void</link>                cut_ui_factory_load                 (const <link linkend=\"gchar\">gchar</link> *base_dir);"
msgstr ""

#: xml/cut-ui-factory.xml:117(term) xml/cut-ui.xml:110(term)
msgid "<parameter>base_dir</parameter>&nbsp;:"
msgstr ""

#: xml/cut-ui-factory.xml:124(title)
msgid ""
"<anchor id=\"cut-ui-factory-unload\" role=\"function\"/"
">cut_ui_factory_unload ()"
msgstr ""

#: xml/cut-ui-factory.xml:125(programlisting)
#, no-wrap
msgid "<link linkend=\"void\">void</link>                cut_ui_factory_unload               (void);"
msgstr ""

#: xml/cut-ui-factory.xml:130(title)
msgid ""
"<anchor id=\"cut-ui-factory-get-registered-types\" role=\"function\"/"
">cut_ui_factory_get_registered_types ()"
msgstr ""

#: xml/cut-ui-factory.xml:131(programlisting)
#, no-wrap
msgid "<link linkend=\"GList\">GList</link>*              cut_ui_factory_get_registered_types (void);"
msgstr ""

#: xml/cut-ui-factory.xml:141(title)
msgid ""
"<anchor id=\"cut-ui-factory-get-log-domains\" role=\"function\"/"
">cut_ui_factory_get_log_domains ()"
msgstr ""

#: xml/cut-ui-factory.xml:142(programlisting)
#, no-wrap
msgid "<link linkend=\"GList\">GList</link>*              cut_ui_factory_get_log_domains      (void);"
msgstr ""

#: xml/cut-ui-factory.xml:152(title)
msgid ""
"<anchor id=\"cut-ui-factory-get-names\" role=\"function\"/"
">cut_ui_factory_get_names ()"
msgstr ""

#: xml/cut-ui-factory.xml:153(programlisting)
#, no-wrap
msgid "<link linkend=\"GList\">GList</link>*              cut_ui_factory_get_names            (void);"
msgstr ""

#: xml/cut-ui-factory.xml:163(title)
msgid ""
"<anchor id=\"cut-ui-factory-new\" role=\"function\"/>cut_ui_factory_new ()"
msgstr ""

#: xml/cut-ui-factory.xml:164(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutUIFactory\">CutUIFactory</link>*       cut_ui_factory_new                  (const <link linkend=\"gchar\">gchar</link> *name,\n"
"                                                         const <link linkend=\"gchar\">gchar</link> *first_property,\n"
"                                                         ...);"
msgstr ""

#: xml/cut-ui-factory.xml:170(term) xml/cut-ui.xml:152(term)
msgid "<parameter>name</parameter>&nbsp;:"
msgstr ""

#: xml/cut-ui-factory.xml:173(term) xml/cut-ui.xml:155(term)
msgid "<parameter>first_property</parameter>&nbsp;:"
msgstr ""

#: xml/cut-ui-factory.xml:185(title)
msgid ""
"<anchor id=\"cut-ui-factory-set-option-group\" role=\"function\"/"
">cut_ui_factory_set_option_group ()"
msgstr ""

#: xml/cut-ui-factory.xml:186(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\">void</link>                cut_ui_factory_set_option_group     (<link linkend=\"CutUIFactory\">CutUIFactory</link> *factory,\n"
"                                                         <link linkend=\"GOptionContext\">GOptionContext</link> *context);"
msgstr ""

#: xml/cut-ui-factory.xml:191(term) xml/cut-ui-factory.xml:206(term)
#: xml/cut-ui-factory.xml:220(term)
msgid "<parameter>factory</parameter>&nbsp;:"
msgstr ""

#: xml/cut-ui-factory.xml:194(term)
msgid "<parameter>context</parameter>&nbsp;:"
msgstr ""

#: xml/cut-ui-factory.xml:201(title)
msgid ""
"<anchor id=\"cut-ui-factory-create\" role=\"function\"/"
">cut_ui_factory_create ()"
msgstr ""

#: xml/cut-ui-factory.xml:202(programlisting)
#, no-wrap
msgid "<link linkend=\"CutUI\">CutUI</link>*              cut_ui_factory_create               (<link linkend=\"CutUIFactory\">CutUIFactory</link> *factory);"
msgstr ""

#: xml/cut-ui-factory.xml:215(title)
msgid ""
"<anchor id=\"cut-ui-factory-get-name\" role=\"function\"/"
">cut_ui_factory_get_name ()"
msgstr ""

#: xml/cut-ui-factory.xml:216(programlisting)
#, no-wrap
msgid "const <link linkend=\"gchar\">gchar</link>*        cut_ui_factory_get_name             (<link linkend=\"CutUIFactory\">CutUIFactory</link> *factory);"
msgstr ""

#: xml/cut-ui.xml:26(link) xml/cut-ui.xml:71(primary)
msgid "cut_ui_init"
msgstr ""

#: xml/cut-ui.xml:27(link) xml/cut-ui.xml:77(primary)
msgid "cut_ui_quit"
msgstr ""

#: xml/cut-ui.xml:28(link) xml/cut-ui.xml:83(primary)
msgid "cut_ui_get_default_module_dir"
msgstr ""

#: xml/cut-ui.xml:29(link) xml/cut-ui.xml:94(primary)
msgid "cut_ui_set_default_module_dir"
msgstr ""

#: xml/cut-ui.xml:30(link) xml/cut-ui.xml:106(primary)
msgid "cut_ui_load"
msgstr ""

#: xml/cut-ui.xml:31(link) xml/cut-ui.xml:118(primary)
msgid "cut_ui_unload"
msgstr ""

#: xml/cut-ui.xml:32(link) xml/cut-ui.xml:124(primary)
msgid "cut_ui_get_registered_types"
msgstr ""

#: xml/cut-ui.xml:33(link) xml/cut-ui.xml:135(primary)
msgid "cut_ui_get_log_domains"
msgstr ""

#: xml/cut-ui.xml:34(link) xml/cut-ui.xml:146(primary)
msgid "cut_ui_new"
msgstr ""

#: xml/cut-ui.xml:37(link) xml/cut-ui.xml:168(primary)
msgid "cut_ui_run"
msgstr ""

#: xml/cut-ui.xml:21(synopsis)
#, no-wrap
msgid ""
"\n"
"\n"
"\n"
"\n"
"                    <placeholder-1/>;\n"
"<placeholder-2/>                <placeholder-3/>                         (void);\n"
"<placeholder-4/>                <placeholder-5/>                         (void);\n"
"const <placeholder-6/>*        <placeholder-7/>       (void);\n"
"<placeholder-8/>                <placeholder-9/>       (const <placeholder-10/> *dir);\n"
"<placeholder-11/>                <placeholder-12/>                         (const <placeholder-13/> *base_dir);\n"
"<placeholder-14/>                <placeholder-15/>                       (void);\n"
"<placeholder-16/>*              <placeholder-17/>         (void);\n"
"<placeholder-18/>*              <placeholder-19/>              (void);\n"
"<placeholder-20/>*              <placeholder-21/>                          (const <placeholder-22/> *name,\n"
"                                                         const <placeholder-23/> *first_property,\n"
"                                                         ...);\n"
"<placeholder-24/>            <placeholder-25/>                          (<placeholder-26/> *ui,\n"
"                                                         <placeholder-27/> *runner);\n"
"\n"
msgstr ""

#: xml/cut-ui.xml:61(title)
msgid "<anchor id=\"CutUI\" role=\"struct\"/>CutUI"
msgstr ""

#: xml/cut-ui.xml:62(programlisting)
#, no-wrap
msgid ""
"typedef struct {\n"
"    GObject object;\n"
"} CutUI;\n"
msgstr ""

#: xml/cut-ui.xml:70(title)
msgid "<anchor id=\"cut-ui-init\" role=\"function\"/>cut_ui_init ()"
msgstr ""

#: xml/cut-ui.xml:71(programlisting)
#, no-wrap
msgid "<link linkend=\"void\">void</link>                cut_ui_init                         (void);"
msgstr ""

#: xml/cut-ui.xml:76(title)
msgid "<anchor id=\"cut-ui-quit\" role=\"function\"/>cut_ui_quit ()"
msgstr ""

#: xml/cut-ui.xml:77(programlisting)
#, no-wrap
msgid "<link linkend=\"void\">void</link>                cut_ui_quit                         (void);"
msgstr ""

#: xml/cut-ui.xml:82(title)
msgid ""
"<anchor id=\"cut-ui-get-default-module-dir\" role=\"function\"/"
">cut_ui_get_default_module_dir ()"
msgstr ""

#: xml/cut-ui.xml:83(programlisting)
#, no-wrap
msgid "const <link linkend=\"gchar\">gchar</link>*        cut_ui_get_default_module_dir       (void);"
msgstr ""

#: xml/cut-ui.xml:93(title)
msgid ""
"<anchor id=\"cut-ui-set-default-module-dir\" role=\"function\"/"
">cut_ui_set_default_module_dir ()"
msgstr ""

#: xml/cut-ui.xml:94(programlisting)
#, no-wrap
msgid "<link linkend=\"void\">void</link>                cut_ui_set_default_module_dir       (const <link linkend=\"gchar\">gchar</link> *dir);"
msgstr ""

#: xml/cut-ui.xml:105(title)
msgid "<anchor id=\"cut-ui-load\" role=\"function\"/>cut_ui_load ()"
msgstr ""

#: xml/cut-ui.xml:106(programlisting)
#, no-wrap
msgid "<link linkend=\"void\">void</link>                cut_ui_load                         (const <link linkend=\"gchar\">gchar</link> *base_dir);"
msgstr ""

#: xml/cut-ui.xml:117(title)
msgid "<anchor id=\"cut-ui-unload\" role=\"function\"/>cut_ui_unload ()"
msgstr ""

#: xml/cut-ui.xml:118(programlisting)
#, no-wrap
msgid "<link linkend=\"void\">void</link>                cut_ui_unload                       (void);"
msgstr ""

#: xml/cut-ui.xml:123(title)
msgid ""
"<anchor id=\"cut-ui-get-registered-types\" role=\"function\"/"
">cut_ui_get_registered_types ()"
msgstr ""

#: xml/cut-ui.xml:124(programlisting)
#, no-wrap
msgid "<link linkend=\"GList\">GList</link>*              cut_ui_get_registered_types         (void);"
msgstr ""

#: xml/cut-ui.xml:134(title)
msgid ""
"<anchor id=\"cut-ui-get-log-domains\" role=\"function\"/"
">cut_ui_get_log_domains ()"
msgstr ""

#: xml/cut-ui.xml:135(programlisting)
#, no-wrap
msgid "<link linkend=\"GList\">GList</link>*              cut_ui_get_log_domains              (void);"
msgstr ""

#: xml/cut-ui.xml:145(title)
msgid "<anchor id=\"cut-ui-new\" role=\"function\"/>cut_ui_new ()"
msgstr ""

#: xml/cut-ui.xml:146(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutUI\">CutUI</link>*              cut_ui_new                          (const <link linkend=\"gchar\">gchar</link> *name,\n"
"                                                         const <link linkend=\"gchar\">gchar</link> *first_property,\n"
"                                                         ...);"
msgstr ""

#: xml/cut-ui.xml:167(title)
msgid "<anchor id=\"cut-ui-run\" role=\"function\"/>cut_ui_run ()"
msgstr ""

#: xml/cut-ui.xml:168(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\">gboolean</link>            cut_ui_run                          (<link linkend=\"CutUI\">CutUI</link> *ui,\n"
"                                                         <link linkend=\"CutRunner\">CutRunner</link> *runner);"
msgstr ""

#: xml/cut-ui.xml:173(term)
msgid "<parameter>ui</parameter>&nbsp;:"
msgstr ""

#: xml/cut-value-equal.xml:7(refentrytitle)
#: xml/cut-value-equal.xml:13(refname)
msgid "cut-value-equal"
msgstr ""

#: xml/cut-value-equal.xml:25(link) xml/cut-value-equal.xml:53(primary)
msgid "cut_value_equal_init"
msgstr ""

#: xml/cut-value-equal.xml:26(link) xml/cut-value-equal.xml:59(primary)
msgid "cut_value_equal"
msgstr ""

#: xml/cut-value-equal.xml:26(link) xml/cut-value-equal.xml:27(link)
msgid "GValue"
msgstr ""

#: xml/cut-value-equal.xml:28(link) xml/cut-value-equal.xml:77(primary)
msgid "cut_value_register_equal_func"
msgstr ""

#: xml/cut-value-equal.xml:28(link) xml/cut-value-equal.xml:29(link)
msgid "GType"
msgstr ""

#: xml/cut-value-equal.xml:30(link)
msgid "GEqualFunc"
msgstr ""

#: xml/cut-value-equal.xml:21(synopsis)
#, no-wrap
msgid ""
"\n"
"\n"
"\n"
"\n"
"<placeholder-1/>                <placeholder-2/>                (void);\n"
"<placeholder-3/>            <placeholder-4/>                     (<placeholder-5/> *value1,\n"
"                                                         <placeholder-6/> *value2);\n"
"<placeholder-7/>                <placeholder-8/>       (<placeholder-9/> type1,\n"
"                                                         <placeholder-10/> type2,\n"
"                                                         <placeholder-11/> equal_func);\n"
msgstr ""

#: xml/cut-value-equal.xml:52(title)
msgid ""
"<anchor id=\"cut-value-equal-init\" role=\"function\"/>cut_value_equal_init "
"()"
msgstr ""

#: xml/cut-value-equal.xml:53(programlisting)
#, no-wrap
msgid "<link linkend=\"void\">void</link>                cut_value_equal_init                (void);"
msgstr ""

#: xml/cut-value-equal.xml:58(title)
msgid "<anchor id=\"cut-value-equal\" role=\"function\"/>cut_value_equal ()"
msgstr ""

#: xml/cut-value-equal.xml:59(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\">gboolean</link>            cut_value_equal                     (<link linkend=\"GValue\">GValue</link> *value1,\n"
"                                                         <link linkend=\"GValue\">GValue</link> *value2);"
msgstr ""

#: xml/cut-value-equal.xml:64(term)
msgid "<parameter>value1</parameter>&nbsp;:"
msgstr ""

#: xml/cut-value-equal.xml:67(term)
msgid "<parameter>value2</parameter>&nbsp;:"
msgstr ""

#: xml/cut-value-equal.xml:76(title)
msgid ""
"<anchor id=\"cut-value-register-equal-func\" role=\"function\"/"
">cut_value_register_equal_func ()"
msgstr ""

#: xml/cut-value-equal.xml:77(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\">void</link>                cut_value_register_equal_func       (<link linkend=\"GType\">GType</link> type1,\n"
"                                                         <link linkend=\"GType\">GType</link> type2,\n"
"                                                         <link linkend=\"GEqualFunc\">GEqualFunc</link> equal_func);"
msgstr ""

#: xml/cut-value-equal.xml:83(term)
msgid "<parameter>type1</parameter>&nbsp;:"
msgstr ""

#: xml/cut-value-equal.xml:86(term)
msgid "<parameter>type2</parameter>&nbsp;:"
msgstr ""

#: xml/cut-value-equal.xml:89(term)
msgid "<parameter>equal_func</parameter>&nbsp;:"
msgstr ""

#: xml/cutter.xml:7(refentrytitle) xml/cutter.xml:13(refname)
msgid "Cutter"
msgstr ""

#: xml/cutter.xml:14(refpurpose)
msgid "An Unit Testing Framework for C."
msgstr "C言語用単体テストフレームワーク"

#: xml/cutter.xml:25(link) xml/cutter.xml:147(primary)
msgid "setup"
msgstr ""

#: xml/cutter.xml:26(link) xml/cutter.xml:156(primary)
msgid "teardown"
msgstr ""

#: xml/cutter.xml:21(synopsis)
#, no-wrap
msgid ""
"\n"
"\n"
"\n"
"\n"
"<placeholder-1/>                <placeholder-2/>                               (void);\n"
"<placeholder-3/>                <placeholder-4/>                            (void);\n"
msgstr ""

#: xml/cutter.xml:50(programlisting)
#, no-wrap
msgid ""
"\n"
"#include &lt;cutter.h&gt;\n"
"#include \"my-stack.h\"\n"
"\n"
"void\n"
"test_my_stack (void)\n"
"{\n"
"    MyStack *stack = my_stack_new();\n"
"\n"
"    cut_assert_not_null(stack);\n"
"    cut_assert(my_stack_is_empty(stack));\n"
"    cut_assert_equal_int(0, my_stack_get_size(stack));\n"
"\n"
"    my_stack_push(stack, 10);\n"
"    cut_assert(!my_stack_is_empty(stack));\n"
"    cut_assert_equal_int(1, my_stack_get_size(stack));\n"
"\n"
"    my_stack_push(stack, 20);\n"
"    cut_assert_equal_int(2, my_stack_get_size(stack));\n"
"\n"
"    cut_assert_equal(20, my_stack_pop(stack));\n"
"    cut_assert(!my_stack_is_empty(stack));\n"
"    cut_assert_equal_int(1, my_stack_get_size(stack));\n"
"\n"
"    cut_assert_equal(10, my_stack_pop(stack));\n"
"    cut_assert(my_stack_is_empty(stack));\n"
"    cut_assert_equal_int(0, my_stack_get_size(stack));\n"
"}\n"
msgstr ""

#: xml/cutter.xml:44(para)
msgid ""
"Easy to use. Cutter doesn't introduce any magic macros like "
"CUTTER_DEFINE_TEST_START and CUTTER_DEFINE_TEST_END into your test program. "
"You can write your test program like normal program. You only use <link "
"linkend=\"cut-assert-XXX\"><function>cut_assert_XXX()</function></link> to "
"check that your program works as you expect. <placeholder-1/>"
msgstr ""
"簡単に使えます。Cutterではテストプログラム中にCUTTER_DEFINE_TEST_STARTや"
"CUTTER_DEFINE_TEST_ENDなどといった不思議なマクロを使う必要がありません。通常"
"のプログラムと同じようにテストプログラムを書くことができます。ただし、プログ"
"ラムが期待した通り動作していることを検証するために<link linkend=\"cut-assert-"
"XXX\"><function>cut_assert_XXX()</function></link>を使う必要があります。"
"<placeholder-1/>"

#: xml/cutter.xml:84(programlisting)
#, no-wrap
msgid ""
"\n"
"...........................................................\n"
"\n"
"Finished in 0.213021 seconds\n"
"\n"
"59 test(s), 246 assertion(s), 0 failure(s), 0 error(s), 0 pending(s), 0 notification(s)\n"
msgstr ""

#: xml/cutter.xml:80(para)
msgid ""
"Simple but useful output. Cutter works quietly if tests are running without "
"any problems by default. The following is an output of self test: "
"<placeholder-1/> Cutter just outputs \".\" for a passed test and a summary "
"at the end. Cutter doesn't output each test name, how many assertions are "
"used for a test and so because we don't need the information on success."
msgstr ""
"簡素ですが有用な情報を出力をします。Cutterはデフォルトではテストが問題なく動"
"いているときは静かに動きます。以下は、Cutter自身のテストの出力です。"
"<placeholder-1/>Cutterはテストが1つパスしたことを示すためには「.」だけを出力"
"し、最後にテスト結果の要約を出力します。Cutterは各テストの名前や何個検証した"
"かなどの情報は表示しません。これは、テスト成功時にはこれらの情報は必要ないか"
"らです。"

#: xml/cutter.xml:97(programlisting)
#, no-wrap
msgid ""
"\n"
".....................F.....................................\n"
"\n"
"1) Failure: test_error\n"
"&lt;\"Strange\" == cut_test_result_get_test_name(result)&gt;\n"
"expected: &lt;Strange!!!&gt;\n"
" but was: &lt;dummy-error-test&gt;\n"
"test/test-cut-assertions.c:240: cut_assert_test_result()\n"
"\n"
"Finished in 0.223657 seconds\n"
"\n"
"59 test(s), 242 assertion(s), 1 failure(s), 0 error(s), 0 pending(s), 0 notification(s)\n"
msgstr ""

#: xml/cutter.xml:112(programlisting)
#, no-wrap
msgid ""
"\n"
"cut_assert_equal_string(\"Strange!!!\", cut_test_result_get_test_name(result));\n"
msgstr ""

#: xml/cutter.xml:95(para)
msgid ""
"Cutter outputs many information on failure: <placeholder-1/> The above "
"result is happened because I add a strange expected staring in Cutter's self "
"test: <placeholder-2/> The strange assertion is written in the 240th line in "
"test/test-cut-assertions.c and the line is in the <link linkend=\"cut-assert-"
"test-result\"><function>cut_assert_test_result()</function></link> function. "
"The function is called in test_error test. We expected "
"cut_test_result_get_test_name(result) should return \"Strange!!!\" but got "
"\"dummy-error-name\". We can get the above information from Cutter output. "
"This will help your debug."
msgstr ""
"Cutterは失敗時にはたくさんの情報を出力します。<placeholder-1/>上記の結果は"
"Cutterの自己テストにおかしな期待値を追加したために起きています。<placeholder-"
"2/>おかしな検証はtest/test-cut-assertions.cの240行目に書かれていて、その行は"
"<link linkend=\"cut-assert-test-result\"><function>cut_assert_test_result()</"
"function></link>関数内にあります。この関数はtest_errorテストから呼び出されて"
"います。cut_test_result_get_test_name(result)が\"Strange!!!\"を返すことを期待"
"していますが、実際は\"dummy-error-name\"が返ってきています。このような情報を"
"上記のCutterの出力から得ることができます。これはデバッグの手助けになるでしょ"
"う。"

#: xml/cutter.xml:123(para)
msgid ""
"Cutter's output format is pragmatic. ' but was:' is indented and aligned "
"with the above 'expected:'. This helps that you find difference between "
"expected value and actual value by your eyes easily. The problem line is "
"formated as 'FILENAME:LINE: FUNCTION' to integrate Emacs. In Emacs's "
"compilation-mode, if the format is appeared in *compilation* buffer, we can "
"jump to FILENAME at LINE with next-error command. (C-x `) This helps that "
"you find the problem line rapidly."
msgstr ""
"Cutterの出力形式は実用的です。' but was:'はその上の'expected:'と並ぶようにイ"
"ンデントされています。これは期待値と実測値をパッと見て簡単に比較できるように"
"するためです。問題のあった行は「ファイル名:行: 関数」というように整形されてい"
"ます。これはEmacsと連携するためです。Emacsのcompilation-modeではこの形式が"
"*compilation*バッファに表れると、next-errorコマンド(C-x `)で「ファイル名」の"
"「行」へジャンプすることができます。これは問題行を素早く見つける手助けをしま"
"す。"

#: xml/cutter.xml:133(para)
msgid "Cutter supports not only easy test writing but also easy debugging."
msgstr ""
"Cutterは簡単にテストを書くことを支援するだけではなく、簡単にデバッグをできる"
"ことも支援します。"

#: xml/cutter.xml:40(para)
msgid ""
"Cutter is an Unit Testing Framework for C and has the following features: "
"<placeholder-1/>"
msgstr ""
"Cutterは以下のような特徴をもったC用の単体テストフレームワークです。"
"<placeholder-1/>"

#: xml/cutter.xml:146(title)
msgid "<anchor id=\"setup\" role=\"function\"/>setup ()"
msgstr ""

#: xml/cutter.xml:147(programlisting)
#, no-wrap
msgid "<link linkend=\"void\">void</link>                setup                               (void);"
msgstr ""

#: xml/cutter.xml:148(para)
msgid ""
"If you define <link linkend=\"setup\"><function>setup()</function></link> in "
"your test program, cutter will call your <link linkend=\"setup"
"\"><function>setup()</function></link> before each your test is run."
msgstr ""
"テストプログラム中で<link linkend=\"setup\"><function>setup()</function></"
"link>を定義していたら、cutterは各テストが実行される前に定義された<link "
"linkend=\"setup\"><function>setup()</function></link>を呼びだします。"

#: xml/cutter.xml:155(title)
msgid "<anchor id=\"teardown\" role=\"function\"/>teardown ()"
msgstr ""

#: xml/cutter.xml:156(programlisting)
#, no-wrap
msgid "<link linkend=\"void\">void</link>                teardown                            (void);"
msgstr ""

#: xml/cutter.xml:157(para)
msgid ""
"If you define <link linkend=\"teardown\"><function>teardown()</function></"
"link> in your test program, cutter will call your <link linkend=\"teardown"
"\"><function>teardown()</function></link> after each your test is run even "
"if a test is failed."
msgstr ""
"テストプログラム中で<link linkend=\"teardown\"><function>teardown()</"
"function></link>を定義していたら、cutterは各テストの後に、たとえテストが失敗"
"していた時でも、<link linkend=\"teardown\"><function>teardown()</function></"
"link>を呼びだします。"

#: xml/cutter.xml:170(title)
msgid "See Also"
msgstr "参考"

#: xml/gbsearcharray.xml:7(refentrytitle) xml/gbsearcharray.xml:13(refname)
msgid "gbsearcharray"
msgstr ""

#: xml/gbsearcharray.xml:25(link) xml/gbsearcharray.xml:58(primary)
msgid "G_BSEARCH_ARRAY_CMP"
msgstr ""

#: xml/gbsearcharray.xml:26(link)
msgid "gint"
msgstr ""

#: xml/gbsearcharray.xml:26(link)
msgid "*GBSearchCompareFunc"
msgstr ""

#: xml/gbsearcharray.xml:26(link)
msgid "gconstpointer"
msgstr ""

#: xml/gbsearcharray.xml:27(link) xml/gbsearcharray.xml:88(primary)
msgid "GBSearchArrayFlags"
msgstr ""

#: xml/gbsearcharray.xml:28(link) xml/gbsearcharray.xml:99(primary)
msgid "g_bsearch_array_get_n_nodes"
msgstr ""

#: xml/gbsearcharray.xml:29(link) xml/gbsearcharray.xml:111(primary)
msgid "g_bsearch_array_lookup"
msgstr ""

#: xml/gbsearcharray.xml:30(link) xml/gbsearcharray.xml:129(primary)
msgid "g_bsearch_array_lookup_sibling"
msgstr ""

#: xml/gbsearcharray.xml:31(link) xml/gbsearcharray.xml:147(primary)
msgid "g_bsearch_array_lookup_insertion"
msgstr ""

#: xml/gbsearcharray.xml:32(link) xml/gbsearcharray.xml:165(primary)
msgid "G_BSEARCH_UPPER_POWER2"
msgstr ""

#: xml/gbsearcharray.xml:33(link) xml/gbsearcharray.xml:177(primary)
msgid "G_BSEARCH_ARRAY_NODES"
msgstr ""

#: xml/gbsearcharray.xml:34(link)
msgid "else"
msgstr ""

#: xml/gbsearcharray.xml:34(link) xml/gbsearcharray.xml:190(primary)
msgid "if"
msgstr ""

#: xml/gbsearcharray.xml:35(link)
msgid "return"
msgstr ""

#: xml/gbsearcharray.xml:35(link) xml/gbsearcharray.xml:201(primary)
msgid "MIN"
msgstr ""

#: xml/gbsearcharray.xml:35(link)
msgid "distance"
msgstr ""

#: xml/gbsearcharray.xml:21(synopsis)
#, no-wrap
msgid ""
"\n"
"\n"
"\n"
"\n"
"#define             <placeholder-1/>                 (v1,v2)\n"
"<placeholder-2/>                (<placeholder-3/>)              (<placeholder-4/> bsearch_node1);\n"
"enum                <placeholder-5/>;\n"
"#define             <placeholder-6/>         (barray)\n"
"#define             <placeholder-7/>              (barray, bconfig, key_node)\n"
"#define             <placeholder-8/>      (barray, bconfig, key_node)\n"
"#define             <placeholder-9/>    (barray, bconfig, key_node)\n"
"#define             <placeholder-10/>              (n)\n"
"#define             <placeholder-11/>               (barray)\n"
"<placeholder-12/>                <placeholder-13/>                                  ();\n"
"<placeholder-14/>              <placeholder-15/>                                 (<placeholder-16/> );\n"
msgstr ""

#: xml/gbsearcharray.xml:57(title)
msgid ""
"<anchor id=\"G-BSEARCH-ARRAY-CMP:CAPS\" role=\"macro\"/>G_BSEARCH_ARRAY_CMP()"
msgstr ""

#: xml/gbsearcharray.xml:58(programlisting)
#, no-wrap
msgid "#define G_BSEARCH_ARRAY_CMP(v1,v2) ((v1) &gt; (v2) ? +1 : (v1) == (v2) ? 0 : -1)\n"
msgstr ""

#: xml/gbsearcharray.xml:63(term)
msgid "<parameter>v1</parameter>&nbsp;:"
msgstr ""

#: xml/gbsearcharray.xml:66(term)
msgid "<parameter>v2</parameter>&nbsp;:"
msgstr ""

#: xml/gbsearcharray.xml:73(title)
msgid ""
"<anchor id=\"GBSearchCompareFunc\" role=\"function\"/>GBSearchCompareFunc ()"
msgstr ""

#: xml/gbsearcharray.xml:74(primary)
msgid "GBSearchCompareFunc"
msgstr ""

#: xml/gbsearcharray.xml:74(programlisting)
#, no-wrap
msgid "<link linkend=\"gint\">gint</link>                (*GBSearchCompareFunc)              (<link linkend=\"gconstpointer\">gconstpointer</link> bsearch_node1);"
msgstr ""

#: xml/gbsearcharray.xml:78(term)
msgid "<parameter>bsearch_node1</parameter>&nbsp;:"
msgstr ""

#: xml/gbsearcharray.xml:87(title)
msgid ""
"<anchor id=\"GBSearchArrayFlags\" role=\"enum\"/>enum GBSearchArrayFlags"
msgstr ""

#: xml/gbsearcharray.xml:88(programlisting)
#, no-wrap
msgid ""
"typedef enum\n"
"{\n"
"  G_BSEARCH_ARRAY_ALIGN_POWER2  = 1 &lt;&lt; 0, /* align memory to power2 sizes */\n"
"  G_BSEARCH_ARRAY_AUTO_SHRINK  = 1 &lt;&lt; 1   /* shrink array upon removal */\n"
"} GBSearchArrayFlags;\n"
msgstr ""

#: xml/gbsearcharray.xml:98(title)
msgid ""
"<anchor id=\"g-bsearch-array-get-n-nodes\" role=\"macro\"/"
">g_bsearch_array_get_n_nodes()"
msgstr ""

#: xml/gbsearcharray.xml:99(programlisting)
#, no-wrap
msgid "#define             g_bsearch_array_get_n_nodes(barray)"
msgstr ""

#: xml/gbsearcharray.xml:103(term) xml/gbsearcharray.xml:115(term)
#: xml/gbsearcharray.xml:133(term) xml/gbsearcharray.xml:151(term)
#: xml/gbsearcharray.xml:182(term)
msgid "<parameter>barray</parameter>&nbsp;:"
msgstr ""

#: xml/gbsearcharray.xml:110(title)
msgid ""
"<anchor id=\"g-bsearch-array-lookup\" role=\"macro\"/>g_bsearch_array_lookup"
"()"
msgstr ""

#: xml/gbsearcharray.xml:111(programlisting)
#, no-wrap
msgid "#define             g_bsearch_array_lookup(barray, bconfig, key_node)"
msgstr ""

#: xml/gbsearcharray.xml:118(term) xml/gbsearcharray.xml:136(term)
#: xml/gbsearcharray.xml:154(term)
msgid "<parameter>bconfig</parameter>&nbsp;:"
msgstr ""

#: xml/gbsearcharray.xml:121(term) xml/gbsearcharray.xml:139(term)
#: xml/gbsearcharray.xml:157(term)
msgid "<parameter>key_node</parameter>&nbsp;:"
msgstr ""

#: xml/gbsearcharray.xml:128(title)
msgid ""
"<anchor id=\"g-bsearch-array-lookup-sibling\" role=\"macro\"/"
">g_bsearch_array_lookup_sibling()"
msgstr ""

#: xml/gbsearcharray.xml:129(programlisting)
#, no-wrap
msgid "#define             g_bsearch_array_lookup_sibling(barray, bconfig, key_node)"
msgstr ""

#: xml/gbsearcharray.xml:146(title)
msgid ""
"<anchor id=\"g-bsearch-array-lookup-insertion\" role=\"macro\"/"
">g_bsearch_array_lookup_insertion()"
msgstr ""

#: xml/gbsearcharray.xml:147(programlisting)
#, no-wrap
msgid "#define             g_bsearch_array_lookup_insertion(barray, bconfig, key_node)"
msgstr ""

#: xml/gbsearcharray.xml:164(title)
msgid ""
"<anchor id=\"G-BSEARCH-UPPER-POWER2:CAPS\" role=\"macro\"/"
">G_BSEARCH_UPPER_POWER2()"
msgstr ""

#: xml/gbsearcharray.xml:165(programlisting)
#, no-wrap
msgid "#define             G_BSEARCH_UPPER_POWER2(n)"
msgstr ""

#: xml/gbsearcharray.xml:169(term)
msgid "<parameter>n</parameter>&nbsp;:"
msgstr ""

#: xml/gbsearcharray.xml:176(title)
msgid ""
"<anchor id=\"G-BSEARCH-ARRAY-NODES:CAPS\" role=\"macro\"/"
">G_BSEARCH_ARRAY_NODES()"
msgstr ""

#: xml/gbsearcharray.xml:177(programlisting)
#, no-wrap
msgid "#define G_BSEARCH_ARRAY_NODES(barray)    (((guint8*) (barray)) + sizeof (GBSearchArray))\n"
msgstr ""

#: xml/gbsearcharray.xml:189(title)
msgid "<anchor id=\"if\" role=\"function\"/>if ()"
msgstr ""

#: xml/gbsearcharray.xml:190(programlisting)
#, no-wrap
msgid "<link linkend=\"else\">else</link>                if                                  ();"
msgstr ""

#: xml/gbsearcharray.xml:200(title)
msgid "<anchor id=\"MIN:CAPS\" role=\"function\"/>MIN ()"
msgstr ""

#: xml/gbsearcharray.xml:201(programlisting)
#, no-wrap
msgid "<link linkend=\"return\">return</link>              MIN                                 (<link linkend=\"distance\">distance</link> );"
msgstr ""

#: xml/gbsearcharray.xml:205(term)
msgid "<parameter>Param1</parameter>&nbsp;:"
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2.
#: xml/gbsearcharray.xml:0(None)
msgid "translator-credits"
msgstr ""

#~ msgid ""
#~ "This is useful only if you make a custom test runner like cutter command. "
#~ "You can pass a data from your custom test runner to test programs. They "
#~ "will receive your data through this."
#~ msgstr ""
#~ "cutterコマンドのようなテスト起動コマンドを独自に作ったときにだけ役にたちま"
#~ "す。独自のテスト起動コマンドからテストプログラムにデータを渡すことができま"
#~ "す。テストプログラムはこのマクロを使ってデータを受け取ることができます。"

#~ msgid "a data from a program who invokes your test."
#~ msgstr "テストを実行したプログラムからのデータ。"

#~ msgid "Tutorial"
#~ msgstr "チュートリアル"

#~ msgid "Object Hierarchy"
#~ msgstr "オブジェクト階層"

#~ msgid "Properties"
#~ msgstr "プロパティ"

#, fuzzy
#~ msgid "n-tests"
#~ msgstr "テスト作成"

#~ msgid "Signals"
#~ msgstr "シグナル"

#~ msgid "Property Details"
#~ msgstr "プロパティ詳細"

#~ msgid "Signal Details"
#~ msgstr "シグナル詳細"

#, fuzzy
#~ msgid "description"
#~ msgstr "説明"

#~ msgid ""
#~ "format string, followed by parameters to insert into the format string "
#~ "(as with <link linkend=\"printf\"><function>printf()</function></link>)"
#~ msgstr ""
#~ "整形文字列。以降のパラメータが整形文字列に挿入されます。（<link linkend="
#~ "\"printf\"><function>printf()</function></link>と同じ）"

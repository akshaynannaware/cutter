# cut-types.h

<TYPEDEF>
<NAME>cut_boolean</NAME>
</TYPEDEF>

<MACRO>
<NAME>CUT_TRUE</NAME>
#define CUT_TRUE
</MACRO>

<MACRO>
<NAME>CUT_FALSE</NAME>
#define CUT_FALSE
</MACRO>

# cut-test-utils.h

<FUNCTION>
<NAME>cut_take</NAME>
<RETURNS>void</RETURNS>
void *object, CutDestroyFunction destroy_function
</FUNCTION>

<FUNCTION>
<NAME>cut_take</NAME>
<RETURNS>void</RETURNS>
void *object, CutDestroyFunction destroy_function
</FUNCTION>

<FUNCTION>
<NAME>cut_take_string_array</NAME>
<RETURNS>char **</RETURNS>
char **
</FUNCTION>

<FUNCTION>
<NAME>cut_set_fixture_data_dir</NAME>
<RETURNS>void</RETURNS>
const char *path, ...
</FUNCTION>

<FUNCTION>
<NAME>cut_build_fixture_data_path</NAME>
<RETURNS>char *</RETURNS>
const char *path, ...
</FUNCTION>

<FUNCTION>
<NAME>cut_equal_string</NAME>
<RETURNS>cut_boolean</RETURNS>
const char string1, const char *string2
</FUNCTION>

<FUNCTION>
<NAME>cut_equal_double</NAME>
<RETURNS>cut_boolean</RETURNS>
double double1, double double2, double error
</FUNCTION>


# gcut-test-utils.h

<FUNCTION>
<NAME>gcut_take_new_list_string</NAME>
<RETURNS>const GList *</RETURNS>
const gchar *value, ...
</FUNCTION>

<FUNCTION>
<NAME>gcut_take_new_list_string_array</NAME>
<RETURNS>const GList *</RETURNS>
const gchar **strings
</FUNCTION>
